"""Add teacher

Revision ID: ee6c1c9714dc
Revises: c7e19df869b4
Create Date: 2022-12-22 06:10:07.314709

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ee6c1c9714dc"
down_revision = "c7e19df869b4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "languageclass",
        sa.Column("status", sa.Integer(), nullable=False),
        sa.Column(
            "activate_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("deactivate_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column("updated_by_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["authuser.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by_id"],
            ["authuser.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_languageclass_updated_at"), "languageclass", ["updated_at"], unique=False)
    op.create_table(
        "studentregistration",
        sa.Column(
            "activate_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("deactivate_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("status", sa.Integer(), nullable=False),
        sa.Column("class_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column("updated_by_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["languageclass.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["authuser.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by_id"],
            ["authuser.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["authuser.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "class_id"),
    )
    op.create_index(op.f("ix_studentregistration_updated_at"), "studentregistration", ["updated_at"], unique=False)
    op.create_table(
        "teacherregistration",
        sa.Column(
            "activate_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("deactivate_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("status", sa.Integer(), nullable=False),
        sa.Column("class_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column("updated_by_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["languageclass.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["authuser.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by_id"],
            ["authuser.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["authuser.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "class_id"),
    )
    op.create_index(op.f("ix_teacherregistration_updated_at"), "teacherregistration", ["updated_at"], unique=False)
    op.add_column("authuser", sa.Column("is_teacher", sa.Boolean(), nullable=True))
    op.add_column(
        "authuser",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
    )
    op.create_index(op.f("ix_authuser_updated_at"), "authuser", ["updated_at"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_authuser_updated_at"), table_name="authuser")
    op.drop_column("authuser", "updated_at")
    op.drop_column("authuser", "is_teacher")
    op.drop_index(op.f("ix_teacherregistration_updated_at"), table_name="teacherregistration")
    op.drop_table("teacherregistration")
    op.drop_index(op.f("ix_studentregistration_updated_at"), table_name="studentregistration")
    op.drop_table("studentregistration")
    op.drop_index(op.f("ix_languageclass_updated_at"), table_name="languageclass")
    op.drop_table("languageclass")
    # ### end Alembic commands ###
