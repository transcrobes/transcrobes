"""More more questions stuff

Revision ID: 87975a1dc9ac
Revises: 8e524de71bb1
Create Date: 2023-10-05 03:33:34.099708

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "87975a1dc9ac"
down_revision = "8e524de71bb1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("contentquestion", sa.Column("id", sa.UUID(), nullable=False))
    op.add_column(
        "contentquestion",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
    )
    op.add_column("contentquestion", sa.Column("created_by_id", sa.Integer(), nullable=False))
    op.add_column("contentquestion", sa.Column("updated_by_id", sa.Integer(), nullable=False))
    op.add_column(
        "contentquestion",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
    )
    op.add_column("contentquestion", sa.Column("deleted", sa.Boolean(), nullable=False))
    op.create_index(op.f("ix_contentquestion_updated_at"), "contentquestion", ["updated_at"], unique=False)
    op.drop_constraint("contentquestion_question_id_fkey", "contentquestion", type_="foreignkey")
    op.create_foreign_key(None, "contentquestion", "authuser", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "contentquestion", "authuser", ["updated_by_id"], ["id"])
    op.create_foreign_key(None, "contentquestion", "question", ["id"], ["id"], initially="DEFERRED", deferrable=True)
    op.drop_column("contentquestion", "question_id")
    op.add_column("freequestion", sa.Column("id", sa.UUID(), nullable=False))
    op.add_column(
        "freequestion",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
    )
    op.add_column("freequestion", sa.Column("created_by_id", sa.Integer(), nullable=False))
    op.add_column("freequestion", sa.Column("updated_by_id", sa.Integer(), nullable=False))
    op.add_column(
        "freequestion",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
    )
    op.add_column("freequestion", sa.Column("deleted", sa.Boolean(), nullable=False))
    op.create_index(op.f("ix_freequestion_updated_at"), "freequestion", ["updated_at"], unique=False)
    op.drop_constraint("freequestion_question_id_fkey", "freequestion", type_="foreignkey")
    op.create_foreign_key(None, "freequestion", "question", ["id"], ["id"], initially="DEFERRED", deferrable=True)
    op.create_foreign_key(None, "freequestion", "authuser", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "freequestion", "authuser", ["updated_by_id"], ["id"])
    op.drop_column("freequestion", "question_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("freequestion", sa.Column("question_id", sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "freequestion", type_="foreignkey")
    op.drop_constraint(None, "freequestion", type_="foreignkey")
    op.drop_constraint(None, "freequestion", type_="foreignkey")
    op.create_foreign_key(
        "freequestion_question_id_fkey",
        "freequestion",
        "question",
        ["question_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.drop_index(op.f("ix_freequestion_updated_at"), table_name="freequestion")
    op.drop_column("freequestion", "deleted")
    op.drop_column("freequestion", "updated_at")
    op.drop_column("freequestion", "updated_by_id")
    op.drop_column("freequestion", "created_by_id")
    op.drop_column("freequestion", "created_at")
    op.drop_column("freequestion", "id")
    op.add_column("contentquestion", sa.Column("question_id", sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "contentquestion", type_="foreignkey")
    op.drop_constraint(None, "contentquestion", type_="foreignkey")
    op.drop_constraint(None, "contentquestion", type_="foreignkey")
    op.create_foreign_key(
        "contentquestion_question_id_fkey",
        "contentquestion",
        "question",
        ["question_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.drop_index(op.f("ix_contentquestion_updated_at"), table_name="contentquestion")
    op.drop_column("contentquestion", "deleted")
    op.drop_column("contentquestion", "updated_at")
    op.drop_column("contentquestion", "updated_by_id")
    op.drop_column("contentquestion", "created_by_id")
    op.drop_column("contentquestion", "created_at")
    op.drop_column("contentquestion", "id")
    # ### end Alembic commands ###
