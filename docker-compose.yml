version: "3.9"
services:
  nginx:
    platform: linux/amd64
    ports:
      - "80:80"
      - "443:443"
    image: nginx:latest
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/certs:/etc/nginx/certs:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
  db:
    platform: linux/amd64
    image: postgres:15
    volumes:
      - app-db-data15:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    command: postgres -c max_stack_depth=6MB
  statsdb:
    platform: linux/amd64
    image: postgres:15
    volumes:
      - app-statsdb-data15:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=${STATS_POSTGRES_SERVER?Variable not set}
      - POSTGRES_USER=${STATS_POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${STATS_POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_DB=${STATS_POSTGRES_DB?Variable not set}
      - POSTGRES_PORT=${STATS_POSTGRES_PORT?Variable not set}
    command: postgres -c max_stack_depth=6MB

  corenlpzh:
    platform: linux/amd64
    image: transcrobes/corenlp-chinese:4.5.1
    env_file:
      - .env

  corenlpen:
    platform: linux/amd64
    image: transcrobes/corenlp-english:4.5.1
    env_file:
      - .env

  kafka:
    platform: linux/amd64
    image: docker.io/bitnami/kafka:3.5
    volumes:
      - "app-kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_MAX_PARTITION_FETCH_BYTES=5242880 # 5MB
      - KAFKA_CFG_MAX_REQUEST_SIZE=5242880
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=5242880
      - KAFKA_CFG_MAX_MESSAGE_BYTES=5242880
      - KAFKA_CFG_MESSAGE_MAX_BYTES=5242880

  backend:
    platform: linux/amd64
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}"
    depends_on:
      - db
      - statsdb
      - kafka
    volumes:
      - app-files-data:/media
      - ./backend/app:/app
      - ./frontend/dist:/fapp
    env_file:
      - .env
    environment:
      - HA_HOST=${DOMAIN?Variable not set}
      - NODE_HOSTS=${NODE_HOSTS?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: .
      dockerfile: Dockerfile.web
      network: "host"
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        TRANSCROBES_DOCKER_REPO: ${TRANSCROBES_DOCKER_REPO-transcrobes}
    command: /bin/bash /start-reload.sh

  sworker:
    platform: linux/amd64
    image: "${DOCKER_IMAGE_SWORKER?Variable not set}:${TAG-latest}"
    depends_on:
      - backend
    volumes:
      - app-files-data:/media
      - ./backend/app:/app
    env_file:
      - .env
    environment:
      - SMTP_HOST=${SMTP_HOST}
      - HA_HOST=${DOMAIN?Variable not set}
      - NODE_HOSTS=${NODE_HOSTS?Variable not set}
      - TRANSCROBES_LOG_LEVEL=INFO
      - TRANSCROBES_DATA_LOG_LEVEL=INFO
      - TRANSCROBES_ENRICH_LOG_LEVEL=INFO
      - TRANSCROBES_ENRICHERS_LOG_LEVEL=INFO
      - TRANSCROBES_DEFAULT_LOG_LEVEL=INFO

    build:
      context: .
      dockerfile: Dockerfile.sworker
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        TRANSCROBES_DOCKER_REPO: ${TRANSCROBES_DOCKER_REPO-transcrobes}

  faustworker:
    platform: linux/amd64
    image: "${DOCKER_IMAGE_FAUSTWORKER?Variable not set}:${TAG-latest}"
    volumes:
      - app-files-data:/media
      - app-stats-data:/data
      - ./backend/app:/app
    depends_on:
      - db
      - kafka
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - NODE_HOSTS=${NODE_HOSTS?Variable not set}
      - HA_HOST=${DOMAIN?Variable not set}

      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST?Variable not set}
      - RUN=faust worker -A app.fworker -l info
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        TRANSCROBES_DOCKER_REPO: ${TRANSCROBES_DOCKER_REPO-transcrobes}

volumes:
  app-files-data:
  app-stats-data:
  app-db-data15:
  app-statsdb-data15:
  app-kafka_data:
    driver: local
