version: "3.9"
services:
  nginx:
    image: nginx:latest
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
  db:
    image: postgres:14
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
  statsdb:
    image: postgres:14
    volumes:
      - app-statsdb-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=${STATS_POSTGRES_SERVER?Variable not set}
      - POSTGRES_USER=${STATS_POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${STATS_POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_DB=${STATS_POSTGRES_DB?Variable not set}
      - POSTGRES_PORT=${STATS_POSTGRES_PORT?Variable not set}

  corenlpzh:
    image: transcrobes/corenlp-chinese:4.3.1
    env_file:
      - .env

  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    volumes:
      - "app-zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:latest
    volumes:
      - "app-kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_MAX_PARTITION_FETCH_BYTES=5242880 # 5MB
      - KAFKA_CFG_MAX_REQUEST_SIZE=5242880
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=5242880
      - KAFKA_CFG_MAX_MESSAGE_BYTES=5242880
      - KAFKA_CFG_MESSAGE_MAX_BYTES=5242880
    depends_on:
      - zookeeper

  backend:
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}"
    depends_on:
      - db
      - statsdb
      - kafka
    volumes:
      - app-files-data:/media
      - ./backend/app:/app
      - ./frontend/dist:/fapp
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: .
      dockerfile: Dockerfile.web
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        TRANSCROBES_DOCKER_REPO: ${TRANSCROBES_DOCKER_REPO-transcrobes}
    command: /bin/bash /start-reload.sh

  sworker:
    image: "${DOCKER_IMAGE_SWORKER?Variable not set}:${TAG-latest}"
    depends_on:
      - backend
    volumes:
      - app-files-data:/media
      - ./backend/app:/app
    env_file:
      - .env
    environment:
      - SMTP_HOST=${SMTP_HOST}
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - TRANSCROBES_LOG_LEVEL=INFO
      - TRANSCROBES_DATA_LOG_LEVEL=INFO
      - TRANSCROBES_ENRICH_LOG_LEVEL=INFO
      - TRANSCROBES_ENRICHERS_LOG_LEVEL=INFO
      - TRANSCROBES_DEFAULT_LOG_LEVEL=INFO

    build:
      context: .
      dockerfile: Dockerfile.sworker
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        TRANSCROBES_DOCKER_REPO: ${TRANSCROBES_DOCKER_REPO-transcrobes}

  faustworker:
    image: "${DOCKER_IMAGE_FAUSTWORKER?Variable not set}:${TAG-latest}"
    volumes:
      - app-files-data:/media
      - app-stats-data:/data
      - ./backend/app:/app
    depends_on:
      - db
      - kafka
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST?Variable not set}
      - RUN=faust worker -A app.fworker -l info
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        TRANSCROBES_DOCKER_REPO: ${TRANSCROBES_DOCKER_REPO-transcrobes}

  # frontend:
  #   image: "${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}"
  #   build:
  #     context: ./frontend
  #     args:
  #       FRONTEND_ENV: ${FRONTEND_ENV-production}

volumes:
  app-db-data:
  app-files-data:
  app-stats-data:
  app-statsdb-data:
  app-zookeeper_data:
    driver: local
  app-kafka_data:
    driver: local
